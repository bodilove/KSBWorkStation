#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.ProjectTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UTop")]
	public partial class dbDatasetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertSingleSteps(SingleSteps instance);
    partial void UpdateSingleSteps(SingleSteps instance);
    partial void DeleteSingleSteps(SingleSteps instance);
    partial void InsertStatistic(Statistic instance);
    partial void UpdateStatistic(Statistic instance);
    partial void DeleteStatistic(Statistic instance);
    #endregion
		
		public dbDatasetDataContext() : 
				base(global::Test.ProjectTest.Properties.Settings.Default.UTopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatasetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatasetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatasetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatasetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SingleSteps> SingleSteps
		{
			get
			{
				return this.GetTable<SingleSteps>();
			}
		}
		
		public System.Data.Linq.Table<Statistic> Statistic
		{
			get
			{
				return this.GetTable<Statistic>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SingleSteps")]
	public partial class SingleSteps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _StepIndex;
		
		private string _PartNr;
		
		private string _SN;
		
		private System.Nullable<System.DateTime> _TestTime;
		
		private string _ID;
		
		private string _StepName;
		
		private string _SubStepName;
		
		private string _CompareMode;
		
		private string _LLimit;
		
		private string _ULimit;
		
		private string _Nom;
		
		private string _Value;
		
		private string _Unit;
		
		private string _Result;
		
		private string _ErrorCode;
		
		private string _Description;
		
		private string _TestKind;
		
		private string _DayID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepIndexChanging(long value);
    partial void OnStepIndexChanged();
    partial void OnPartNrChanging(string value);
    partial void OnPartNrChanged();
    partial void OnSNChanging(string value);
    partial void OnSNChanged();
    partial void OnTestTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestTimeChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnStepNameChanging(string value);
    partial void OnStepNameChanged();
    partial void OnSubStepNameChanging(string value);
    partial void OnSubStepNameChanged();
    partial void OnCompareModeChanging(string value);
    partial void OnCompareModeChanged();
    partial void OnLLimitChanging(string value);
    partial void OnLLimitChanged();
    partial void OnULimitChanging(string value);
    partial void OnULimitChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTestKindChanging(string value);
    partial void OnTestKindChanged();
    partial void OnDayIDChanging(int value);
    partial void OnDayIDChanged();
    #endregion
		
		public SingleSteps()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepIndex", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long StepIndex
		{
			get
			{
				return this._StepIndex;
			}
			set
			{
				if ((this._StepIndex != value))
				{
					this.OnStepIndexChanging(value);
					this.SendPropertyChanging();
					this._StepIndex = value;
					this.SendPropertyChanged("StepIndex");
					this.OnStepIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PartNr
		{
			get
			{
				return this._PartNr;
			}
			set
			{
				if ((this._PartNr != value))
				{
					this.OnPartNrChanging(value);
					this.SendPropertyChanging();
					this._PartNr = value;
					this.SendPropertyChanged("PartNr");
					this.OnPartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestTime
		{
			get
			{
				return this._TestTime;
			}
			set
			{
				if ((this._TestTime != value))
				{
					this.OnTestTimeChanging(value);
					this.SendPropertyChanging();
					this._TestTime = value;
					this.SendPropertyChanged("TestTime");
					this.OnTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayID", DbType = "VarChar(10)")]
        public string DayID
        {
            get
            {
                return this._DayID;
            }
            set
            {
                if ((this._DayID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._DayID = value;
                    this.SendPropertyChanged("_DayID");
                    this.OnIDChanged();
                }
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepName", DbType="VarChar(50)")]
		public string StepName
		{
			get
			{
				return this._StepName;
			}
			set
			{
				if ((this._StepName != value))
				{
					this.OnStepNameChanging(value);
					this.SendPropertyChanging();
					this._StepName = value;
					this.SendPropertyChanged("StepName");
					this.OnStepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubStepName", DbType="VarChar(50)")]
		public string SubStepName
		{
			get
			{
				return this._SubStepName;
			}
			set
			{
				if ((this._SubStepName != value))
				{
					this.OnSubStepNameChanging(value);
					this.SendPropertyChanging();
					this._SubStepName = value;
					this.SendPropertyChanged("SubStepName");
					this.OnSubStepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareMode", DbType="VarChar(30)")]
		public string CompareMode
		{
			get
			{
				return this._CompareMode;
			}
			set
			{
				if ((this._CompareMode != value))
				{
					this.OnCompareModeChanging(value);
					this.SendPropertyChanging();
					this._CompareMode = value;
					this.SendPropertyChanged("CompareMode");
					this.OnCompareModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LLimit", DbType="VarChar(50)")]
		public string LLimit
		{
			get
			{
				return this._LLimit;
			}
			set
			{
				if ((this._LLimit != value))
				{
					this.OnLLimitChanging(value);
					this.SendPropertyChanging();
					this._LLimit = value;
					this.SendPropertyChanged("LLimit");
					this.OnLLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULimit", DbType="VarChar(50)")]
		public string ULimit
		{
			get
			{
				return this._ULimit;
			}
			set
			{
				if ((this._ULimit != value))
				{
					this.OnULimitChanging(value);
					this.SendPropertyChanging();
					this._ULimit = value;
					this.SendPropertyChanged("ULimit");
					this.OnULimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(10)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", CanBeNull=false)]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestKind", CanBeNull=false)]
		public string TestKind
		{
			get
			{
				return this._TestKind;
			}
			set
			{
				if ((this._TestKind != value))
				{
					this.OnTestKindChanging(value);
					this.SendPropertyChanging();
					this._TestKind = value;
					this.SendPropertyChanged("TestKind");
					this.OnTestKindChanged();
				}
			}
		}
		
        //[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayID")]
        //public int DayID
        //{
        //    get
        //    {
        //        return this._DayID;
        //    }
        //    set
        //    {
        //        if ((this._DayID != value))
        //        {
        //            this.OnDayIDChanging(value);
        //            this.SendPropertyChanging();
        //            this._DayID = value;
        //            this.SendPropertyChanged("DayID");
        //            this.OnDayIDChanged();
        //        }
        //    }
        //}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statistic")]
	public partial class Statistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartNr;
		
		private System.Nullable<int> _PassCount;
		
		private System.Nullable<int> _FailCount;
		
		private System.Nullable<int> _ID;

        private System.Nullable<int> _DayID;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartNrChanging(string value);
    partial void OnPartNrChanged();
    partial void OnPassCountChanging(System.Nullable<int> value);
    partial void OnPassCountChanged();
    partial void OnFailCountChanging(System.Nullable<int> value);
    partial void OnFailCountChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Statistic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNr", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PartNr
		{
			get
			{
				return this._PartNr;
			}
			set
			{
				if ((this._PartNr != value))
				{
					this.OnPartNrChanging(value);
					this.SendPropertyChanging();
					this._PartNr = value;
					this.SendPropertyChanged("PartNr");
					this.OnPartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCount", DbType="Int")]
		public System.Nullable<int> PassCount
		{
			get
			{
				return this._PassCount;
			}
			set
			{
				if ((this._PassCount != value))
				{
					this.OnPassCountChanging(value);
					this.SendPropertyChanging();
					this._PassCount = value;
					this.SendPropertyChanged("PassCount");
					this.OnPassCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailCount", DbType="Int")]
		public System.Nullable<int> FailCount
		{
			get
			{
				return this._FailCount;
			}
			set
			{
				if ((this._FailCount != value))
				{
					this.OnFailCountChanging(value);
					this.SendPropertyChanging();
					this._FailCount = value;
					this.SendPropertyChanged("FailCount");
					this.OnFailCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayID", DbType = "Int")]
        public System.Nullable<int> DayID
        {
            get
            {
                return this._DayID;
            }
            set
            {
                if ((this._DayID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._DayID = value;
                    this.SendPropertyChanged("DayID");
                    this.OnIDChanged();
                }
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
